#cloud-config

write_files:
  %{~ for f in files ~}
  - path: /var/app/${f.filename}
    permissions: %{ if substr(f.filename, -2, 2) == "sh"}0755%{else}0644%{endif}
    content: ${f.content}
    encoding: b64
  %{~ endfor ~}
  %{~ for c in docker_compose_files ~}
  - path: /etc/systemd/system/${coalesce(c.name, "app")}.service
    permissions: 0644
    content: |
      [Unit]
      Description=Docker Compose Service (${coalesce(c.name, "app")})
      Requires=docker.service ${join(" ", [ for f in docker_compose_files : "${f.name}.service" if f.name != null && c.name == null ])}
      After=docker.service

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      WorkingDirectory=/var/app
      EnvironmentFile=/var/app/.env
      ExecStartPre=-/usr/bin/docker run --rm \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v "/var/app:/var/app" -w="/var/app" \
        "$${COMPOSE_DOCKER_IMAGE}:$${COMPOSE_DOCKER_TAG}" -f ${c.filename} rm
      ExecStart=/usr/bin/docker run --rm \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v "/var/app:/var/app" -w="/var/app" \
        "$${COMPOSE_DOCKER_IMAGE}:$${COMPOSE_DOCKER_TAG}" -f ${c.filename} up -d
      ExecStop=/usr/bin/docker run --rm \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v "/var/app:/var/app" -w="/var/app" \
        "$${COMPOSE_DOCKER_IMAGE}:$${COMPOSE_DOCKER_TAG}" -f ${c.filename} stop -t 15

      [Install]
      WantedBy=multi-user.target

  %{~ endfor ~}
  - path: /etc/systemd/system/app-monitor.service
    permissions: 0644
    content: |
      [Unit]
      Description=Restart application

      [Service]
      Type=oneshot
      WorkingDirectory=/var/app
      EnvironmentFile=/var/app/.env
      ExecStartPre=-/usr/bin/docker run --rm \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v "/var/app:/var/app" -w="/var/app" \
        "$${COMPOSE_DOCKER_IMAGE}:$${COMPOSE_DOCKER_TAG}" pull --ignore-pull-failures
      ExecStart=/usr/bin/systemctl restart app.service

      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/app-monitor.path
    permissions: 0644
    content: |
      [Unit]
      Description=Watch for updates to .env
      After=app.service

      [Path]
      PathChanged=/var/app/.env

      [Install]
      WantedBy=multi-user.target

runcmd:
  # Install Docker if required. Note: This installation method is not
  # recommended for production deployments
  # https://github.com/docker/docker-install
  - which docker > /dev/null 2>&1 || curl -fsSL https://get.docker.com | sh
  # Create network used by Traefik to identify running containers
  - "[ $(docker network list -q --filter=name=web) ] || docker network create web"
%{ if login != null }
  - docker login ${login}
  - docker pull '${image}'
%{ endif }
  # Enable systemd services responsible for managing Docker Compose services
  - systemctl daemon-reload && systemctl enable --now app app-monitor.path
